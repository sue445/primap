name: build

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  GO_VERSION: 1.15
  GO111MODULE: "on"
  TEST_ARGS: -coverprofile coverage.out -covermode atomic

jobs:
  test:
    name: test

    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: v1-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            v1-${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Install firebase emulator
        run: |
          set -xe
          sudo wget https://firebase.tools/bin/linux/latest -O /usr/local/bin/firebase
          sudo chmod 755 /usr/local/bin/firebase
          firebase setup:emulators:firestore
          firebase setup:emulators:pubsub

      - name: Run test
        run: |
          set -xe
          firebase --project $GCP_PROJECT emulators:exec --only firestore,pubsub "make test"
          firebase --project $GCP_PROJECT emulators:exec --only firestore,pubsub "make testrace"
        env:
          GCP_PROJECT: test

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: ${{ format('*test* ({0})', env.GO_VERSION) }}
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: lint

    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-lint-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-lint-

      - name: Run lint
        run: |
          set -xe

          export GOPATH=`go env GOPATH`
          export PATH=$GOPATH/bin:$PATH
          go get -u golang.org/x/lint/golint

          make fmtci
          make vet
          make lint

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: "*lint*"
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: build

    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - run: docker build .

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: "*build*"
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs:
      - test
      - lint
      - build

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: homoluctus/slatify@master
        if: always()
        continue-on-error: true
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
