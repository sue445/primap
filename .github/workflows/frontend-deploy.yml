name: frontend-deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      # Ignore files that are not used in production
      - "**.md"
      - ".dependabot/config.yml"
      - ".github/workflows/go-mod-tidy-pr.yml"
      - "LICENSE"

      # Ignore files used only by the function
      - "function/**"
      - ".github/workflows/function-*.yml"

env:
  GCP_PROJECT:  primap
  NODE_VERSION: 14

defaults:
  run:
    working-directory: frontend

jobs:
  firebase:
    name: firebase

    runs-on: ubuntu-latest
    concurrency: frontend-deploy

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v2
        with:
          path: frontend/node_modules/
          key: frontend-v1-${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            frontend-v1-${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - run: npm install

      - run: npm run build
        env:
          NODE_ENV: production
          REACT_APP_GOOGLE_BROWSER_API_KEY: ${{ secrets.REACT_APP_GOOGLE_BROWSER_API_KEY }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
          REACT_APP_SENTRY_RELEASE: ${{ github.sha }}

      - name: public/ should have been created
        run: |
          set -xe
          ls -l public/build/
          ls -l public/index.html

      - name: GCP Authenticate
        uses: google-github-actions/setup-gcloud@master
        with:
          version: latest
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
          project_id: ${{ env.GCP_PROJECT }}

      - name: Install firebase
        run: |
          set -xe
          sudo wget https://firebase.tools/bin/linux/latest -O /usr/local/bin/firebase
          sudo chmod 755 /usr/local/bin/firebase

      - run: firebase deploy

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_FRONTEND }}
        with:
          environment: production

      - name: Slack Notification
        uses: lazy-actions/slatify@master
        if: always()
        continue-on-error: true
        with:
          job_name: '*firebase*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
