name: function-build

on:
  push:
    branches:
      - master
    paths-ignore:
      # Ignore files that are not used in production
      - "**.md"
      - "LICENSE"
      - "function/_img/**"
      - "function/_script/**"

      # Ignore files used only by the frontend
      - "frontend/**"
      - ".github/workflows/frontend-*.yml"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      # Ignore files that are not used in production
      - "**.md"
      - "LICENSE"
      - "function/_img/**"

      # Ignore files used only by the frontend
      - "frontend/**"
      - ".github/workflows/frontend-*.yml"

env:
  TEST_ARGS: -coverprofile coverage.out -covermode atomic

defaults:
  run:
    working-directory: function

jobs:
  test:
    name: test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "function/go.mod"
          cache: true
          cache-dependency-path: "function/go.sum"
        id: go

      - name: Install firebase emulator
        run: |
          set -xe
          sudo wget https://firebase.tools/bin/linux/latest -O /usr/local/bin/firebase --quiet
          sudo chmod 755 /usr/local/bin/firebase
          firebase setup:emulators:firestore
          firebase setup:emulators:pubsub

      - name: Run test
        run: |
          set -xe
          firebase --project $GCP_PROJECT emulators:exec --only firestore,pubsub "make test"
          firebase --project $GCP_PROJECT emulators:exec --only firestore,pubsub "make testrace"
        env:
          GCP_PROJECT: test
          PUBSUB_PROJECT_ID: test
          PUBSUB_EMULATOR_HOST: localhost:8085

      # FIXME: gcov2lcov-action doesn't support mono repo...
      # - name: Convert coverage to lcov
      #   uses: jandelgado/gcov2lcov-action@v1.0.0
      #   with:
      #     infile: coverage.out
      #     outfile: coverage.lcov

      - name: Install gcov2lcov
        run: |
          set -xe
          wget https://github.com/jandelgado/gcov2lcov/releases/download/${VERSION}/gcov2lcov-linux-amd64.tar.gz -q -O - | tar xvzf - --strip 1
          chmod 755 gcov2lcov-linux-amd64
        env:
          VERSION: v1.0.4
        working-directory: /tmp

      - name: Run gcov2lcov
        run: |
          set -xe
          exec /tmp/gcov2lcov-linux-amd64 -infile "coverage.out" -outfile "coverage.lcov"

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: function/coverage.lcov
        continue-on-error: true

      - name: Slack Notification (not success)
        uses: lazy-actions/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: "*test*"
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "function/go.mod"
          cache: true
          cache-dependency-path: "function/go.sum"
        id: go

      - name: Run lint
        run: |
          set -xe

          go install golang.org/x/lint/golint@latest

          make fmtci
          make vet
          make lint

      - name: Slack Notification (not success)
        uses: lazy-actions/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: "*lint*"
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  go2ts:
    name: go2ts

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "function/go.mod"
          cache: true
          cache-dependency-path: "function/go.sum"
        id: go

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "function/package-lock.json"

      - run: npm ci
        working-directory: frontend

      - name: "[NOTE] Run `make go2ts` if this is failed"
        run: |
          set -xe
          make go2ts_ci
          git checkout HEAD -- go.mod go.sum
          git --no-pager diff
          git status | grep "nothing to commit, working tree clean"

      - name: Slack Notification (not success)
        uses: lazy-actions/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: "*go2ts*"
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs:
      - test
      - lint
      - go2ts

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: lazy-actions/slatify@master
        if: always()
        continue-on-error: true
        with:
          job_name: '*notify*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
