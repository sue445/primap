service: primap

provider:
  name: google
  runtime: go113
  region: asia-northeast1
  project: primap
  stage: production
  memorySize: 128

  # The GCF credentials can be a little tricky to set up. Luckily we've documented this for you here:
  # https://serverless.com/framework/docs/providers/google/guide/credentials/
  #
  # the path to the credentials file needs to be absolute
  credentials: ~/.gcloud/keyfile.json

  environment:
    GCP_PROJECT: ${self:provider.project}
    SENTRY_ENVIRONMENT: production
    SENTRY_RELEASE: ${env:GITHUB_SHA}

plugins:
  - serverless-google-cloudfunctions

# needs more granular excluding in production as only the serverless provider npm
# package should be excluded (and not the whole node_modules directory)
package:
  exclude:
    - "node_modules/**"
    - "db/testdata/**"
    - "testdata/**"
    - "testutil/**"
    - "_script/**"
    - "**/*_test.go"
    - ".gitignore"
    - "Dockerfile"
    - "Makefile"
    - "package*.json"
    - "serverless.yml"

functions:
  cron_update_shops:
    handler: CronUpdateShops
    timeout: 540s # NOTE: This is max
    events:
      - event:
          eventType: providers/cloud.pubsub/eventTypes/topic.publish
          resource: 'projects/${self:provider.project}/topics/sls-cron-topic'

  queue_save_shop:
    handler: QueueSaveShop
    events:
      - event:
          eventType: providers/cloud.pubsub/eventTypes/topic.publish
          resource: 'projects/${self:provider.project}/topics/sls-shop-save-topic'

  # NOTE: the following uses an "event" event (pubSub event in this case).
  # Please create the corresponding resources in the Google Cloud
  # before deploying this service through Serverless
  #second:
  #  handler: event
  #  events:
  #    - event:
  #        eventType: providers/cloud.pubsub/eventTypes/topic.publish
  #        resource: projects/*/topics/my-topic

resources:
  resources:
    # c.f. https://github.com/serverless/serverless-google-cloudfunctions/issues/174#issuecomment-685430068
    - type: pubsub.v1.topic
      name: sls-cron-topic
      properties:
        topic: sls-cron-topic
    - type: gcp-types/cloudscheduler-v1:projects.locations.jobs
      name: sls-cron-update-shops
      properties:
        parent: projects/${self:provider.project}/locations/${self:provider.region} # not described in API spec but required
        name: sls-cron-update-shops
        description: "Map daily update scheduler"
        schedule: "0 22 * * *" # this controls the CRON schedule of your function invocations
        timeZone: "Asia/Tokyo"
        pubsubTarget:
          topicName: projects/${self:provider.project}/topics/sls-cron-topic
          attributes:
            name: cron # this is dummy

    - name: sls-shop-save-topic
      type: pubsub.v1.topic
      properties:
        topic: sls-shop-save-topic

# you can define resources, templates etc. the same way you would in a
# Google Cloud deployment configuration
#resources:
#  resources:
#    - type: storage.v1.bucket
#      name: my-serverless-service-bucket
#  imports:
#    - path: my_template.jinja
